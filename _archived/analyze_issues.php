<?php
// Ph√¢n t√≠ch chi ti·∫øt c√°c v·∫•n ƒë·ªÅ trong h·ªá th·ªëng

$pdo = new PDO('mysql:host=127.0.0.1;dbname=tmdt_bc;charset=utf8', 'root', '');
$pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

echo str_repeat("=", 70) . "\n";
echo "üîç PH√ÇN T√çCH CHI TI·∫æT H·ªÜ TH·ªêNG ƒê·∫∂T V√â\n";
echo str_repeat("=", 70) . "\n\n";

// V·∫§N ƒê·ªÄ 1: C·∫•u tr√∫c d·ªØ li·ªáu kh√¥ng nh·∫•t qu√°n
echo "‚ùå V·∫§N ƒê·ªÄ 1: C·∫§U TR√öC D·ªÆ LI·ªÜU KH√îNG NH·ª§ QU√ÅN\n";
echo str_repeat("-", 70) . "\n";

$sql = "SELECT * FROM dat_ve WHERE chuyen_xe_id = 1";
$stmt = $pdo->query($sql);
$bookings = $stmt->fetchAll(PDO::FETCH_ASSOC);

echo "D·ªØ li·ªáu C≈® trong database:\n";
foreach ($bookings as $booking) {
    echo "  ‚Ä¢ {$booking['ma_ve']}: so_ghe = '{$booking['so_ghe']}' ({$booking['trang_thai']})\n";
    if (strpos($booking['so_ghe'], ',') !== false) {
        echo "    ‚ö†Ô∏è  NHI·ªÄU GH·∫æ TRONG 1 ROW (format c≈©)\n";
    } else {
        echo "    ‚úì 1 gh·∫ø/1 row (format m·ªõi)\n";
    }
}

echo "\nCode PHP HI·ªÜN T·∫†I ƒëang t·∫°o:\n";
echo "  ‚Ä¢ M·ªói gh·∫ø = 1 row ri√™ng\n";
echo "  ‚Ä¢ VD: Ch·ªçn A01, A02 ‚Üí T·∫°o 2 rows v·ªõi c√πng ma_ve\n\n";

echo "‚ö†Ô∏è  M√ÇU THU·∫™N:\n";
echo "  ‚Ä¢ Database C≈®: Nhi·ªÅu gh·∫ø trong 1 row (A01, A02, A03)\n";
echo "  ‚Ä¢ Code M·ªöI: M·ªói gh·∫ø 1 row ri√™ng\n";
echo "  ‚Ä¢ Query l·∫•y gh·∫ø ƒë√£ ƒë·∫∑t: pluck('so_ghe') ‚Üí L·∫•y t·ª´ng row\n\n";

// V·∫§N ƒê·ªÄ 2: Ki·ªÉm tra gh·∫ø ƒë√£ ƒë·∫∑t
echo "\n‚ùå V·∫§N ƒê·ªÄ 2: QUERY L·∫§Y GH·∫æ ƒê√É ƒê·∫∂T\n";
echo str_repeat("-", 70) . "\n";

// Query hi·ªán t·∫°i
$sql = "SELECT so_ghe FROM dat_ve 
        WHERE chuyen_xe_id = 1 
        AND trang_thai IN ('ƒê√£ ƒë·∫∑t', 'ƒê√£ thanh to√°n')";
$stmt = $pdo->query($sql);
$bookedSeats = $stmt->fetchAll(PDO::FETCH_COLUMN);

echo "Query hi·ªán t·∫°i:\n";
echo "  SELECT so_ghe FROM dat_ve WHERE ... AND trang_thai IN ('ƒê√£ ƒë·∫∑t', 'ƒê√£ thanh to√°n')\n\n";

echo "K·∫øt qu·∫£:\n";
foreach ($bookedSeats as $seat) {
    echo "  ‚Ä¢ '$seat'\n";
    if (strpos($seat, ',') !== false) {
        echo "    ‚ö†Ô∏è  ƒê√¢y l√† STRING ch·ª©a nhi·ªÅu gh·∫ø, kh√¥ng ph·∫£i 1 gh·∫ø!\n";
        echo "    ‚ö†Ô∏è  in_array('A01', ['A01, A02, A03']) = FALSE\n";
        echo "    ‚ö†Ô∏è  Gh·∫ø s·∫Ω KH√îNG ƒë∆∞·ª£c ƒë√°nh d·∫•u ƒë√£ ƒë·∫∑t tr√™n UI!\n";
    }
}

// V·∫§N ƒê·ªÄ 3: Timestamps
echo "\n\n‚ùå V·∫§N ƒê·ªÄ 3: TIMESTAMPS\n";
echo str_repeat("-", 70) . "\n";
echo "Database c√≥ c·ªôt: ngay_dat (timestamp)\n";
echo "Model DatVe.php: public \$timestamps = false;\n";
echo "‚ö†Ô∏è  Laravel s·∫Ω KH√îNG t·ª± ƒë·ªông set ngay_dat khi create()\n";
echo "‚ö†Ô∏è  Ph·∫£i th√™m 'ngay_dat' v√†o fillable v√† set manually\n\n";

// V·∫§N ƒê·ªÄ 4: Format gh·∫ø
echo "‚ùå V·∫§N ƒê·ªÄ 4: FORMAT GH·∫æ\n";
echo str_repeat("-", 70) . "\n";

$sql = "SELECT DISTINCT so_ghe FROM dat_ve ORDER BY so_ghe";
$stmt = $pdo->query($sql);
$allSeats = $stmt->fetchAll(PDO::FETCH_COLUMN);

$formats = [];
foreach ($allSeats as $seat) {
    if (strpos($seat, ',') !== false) {
        $formats['Nhi·ªÅu gh·∫ø/1 row (c≈©)'][] = $seat;
    } else if (preg_match('/^[AB]\d{2}$/', $seat)) {
        $formats['1 gh·∫ø/1 row (m·ªõi, ƒë√∫ng)'][] = $seat;
    } else {
        $formats['Format l·ªói'][] = $seat;
    }
}

foreach ($formats as $type => $seats) {
    echo "$type:\n";
    foreach (array_slice($seats, 0, 5) as $seat) {
        echo "  ‚Ä¢ $seat\n";
    }
    if (count($seats) > 5) {
        echo "  ... v√† " . (count($seats) - 5) . " gh·∫ø kh√°c\n";
    }
    echo "\n";
}

// GI·∫¢I PH√ÅP
echo "\n" . str_repeat("=", 70) . "\n";
echo "‚úÖ GI·∫¢I PH√ÅP\n";
echo str_repeat("=", 70) . "\n\n";

echo "1Ô∏è‚É£ S·ª¨A QUERY L·∫§Y GH·∫æ ƒê√É ƒê·∫∂T:\n";
echo "   N·∫øu gi·ªØ format C≈® (nhi·ªÅu gh·∫ø/1 row):\n";
echo "   ‚Ä¢ C·∫ßn split string: FIND_IN_SET() ho·∫∑c x·ª≠ l√Ω PHP\n\n";
echo "   N·∫øu chuy·ªÉn sang format M·ªöI (1 gh·∫ø/1 row) - KHUY·∫æN NGH·ªä:\n";
echo "   ‚Ä¢ Migrate d·ªØ li·ªáu c≈©\n";
echo "   ‚Ä¢ Code hi·ªán t·∫°i ƒë√£ ƒë√∫ng\n\n";

echo "2Ô∏è‚É£ S·ª¨A MODEL DatVe:\n";
echo "   ‚Ä¢ Th√™m 'ngay_dat' v√†o fillable\n";
echo "   ‚Ä¢ Ho·∫∑c d√πng DB default value (hi·ªán t·∫°i c√≥: current_timestamp())\n\n";

echo "3Ô∏è‚É£ MIGRATE D·ªÆ LI·ªÜU C≈®:\n";
echo "   ‚Ä¢ Split 'A01, A02, A03' th√†nh 3 rows ri√™ng\n";
echo "   ‚Ä¢ Update l·∫°i t·∫•t c·∫£ bookings c≈©\n\n";

// Test v·ªõi d·ªØ li·ªáu hi·ªán t·∫°i
echo "üß™ TEST V·ªöI D·ªÆ LI·ªÜU HI·ªÜN T·∫†I:\n";
echo str_repeat("-", 70) . "\n";

$testSeats = ['A01', 'A02', 'A03'];
$testBookedString = 'A01, A02,A03'; // Format c≈©

echo "Gh·∫ø c·∫ßn check: " . implode(', ', $testSeats) . "\n";
echo "D·ªØ li·ªáu trong DB: '$testBookedString'\n\n";

foreach ($testSeats as $seat) {
    $found = in_array($seat, [$testBookedString]);
    echo "  in_array('$seat', ['$testBookedString']) = " . ($found ? 'TRUE ‚úì' : 'FALSE ‚ùå') . "\n";
}

echo "\n‚ö†Ô∏è  K·∫øt lu·∫≠n: Gh·∫ø s·∫Ω KH√îNG ƒë∆∞·ª£c ƒë√°nh d·∫•u ƒë√£ ƒë·∫∑t!\n";
